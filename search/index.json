[{"content":"起因 经常需要在电脑和手机之间互传文件，想了不少办法，最早是使用 QQ 等聊天工具进行文件传输，效率十分低下；后来找到了 SnapDrop 这款工具，可以以类似面对面快传的方式在局域网内传输文件，提高了些许效率，但还是感觉到些许别扭。于是开始找寻一种更为优雅的文件传输方式，想到手里有一个半吃灰的树莓派，就开始着手搭建自己的 FTP 文件服务器。\n什么是 FTP 文件传输协议（File Transfer Protocol，缩写 FTP）是一个用于在计算机网络上在客户端和服务器之间进行文件传输的应用层协议。 相比 WebDav 等其他传输协议，纯 FTP 的安全性略显低下，但对于小型自用而言已经绰绰有余。\n搭建 关于树莓派 本文中使用的树莓派信息如下：\n型号：4B\nRAM：4GB\n系统：Ubuntu Server 22.04 首先安装软件包 vsftpd\n1 $ sudo apt install vsftpd -y 安装过程中会自动创建一个名为 ftp 的用户，我们给它设置一个密码作为稍后的登录密码（若打算开启匿名登录可跳过）：\n1 $ sudo passwd ftp FTP 文件存放位置 FTP 服务开启后的文件存储位置就是 frp 用户的家目录，位于 /srv/ftp 密码更改完成后，选用喜欢的编辑器打开 FTP 服务器配置文件 /etc/vsftpd.conf，按照需求取消注释（去掉行首的 # 号）或修改相应选项（如果找不到被注释的选项在哪里也可以直接在文件末尾添加，格式为 选项=值）。这里列出几个常用的，YES/NO 分别对应是/否：\n通用\nlocal_enable：是否允许本地用户登录\nwrite_enable：是否允许写入操作（上传文件、新建文件夹等）\nutf8_filesystem：启用 UTF-8 支持\n匿名登录相关\nanonymous_enable：是否允许匿名登录\nanon_upload_enable：是否允许匿名用户上传文件\nanon_mkdir_write_enable：是否允许匿名用户新建文件夹\nChroot 相关\nchroot_local_user：是否将连接 FTP 的本地用户的根目录限制为其家目录（/home/\u0026lt;username\u0026gt;）\nchroot_list_enable：启用 chroot 白名单，只有在其中的用户才会被 chroot（如果把 chroot_local_user 设置为 YES 将变为黑名单，只有在其中的用户不会被 chroot）\nchroot_list_file：chroot 黑/白名单的文件路径，文件中填写用户名，一行一个\n注：如果只设置 chroot_local_user 为 YES 而不设置黑/白名单，会对所有连接 FTP 的本地用户进行 chroot。\n修改好配置后重启 FTP 服务：\n1 $ sudo systemctl restart vsftpd 连接 查看树莓派 IP，可以使用 ip addr 或 ifconfig 等等方式。这里举例为 192.168.0.114，后续命令中记得替换成自己的。\n使用 FTP 工具进行连接测试，这里先使用 Linux 和 Windows 都自带的 ftp 命令：\n1 $ ftp 192.168.0.114 提示输入用户名和密码，用户名输入 ftp，密码输入之前设置的密码，若设置了匿名就直接留空回车。\n1 2 3 4 5 6 7 Connected to 192.168.0.114. 220 (vsFTPd 3.0.5) Name (192.168.0.114:bs): ftp 331 Please specify the password. Password: 230 Login successful. ftp\u0026gt; 成功进入 FTP Shell 后可以输入 ls，pwd 等命令进行测试，使用 quit 退出。\n搭建完成 一个简单的 FTP 服务器已经搭建完毕，可以使用各种 FTP 工具连接使用。\n如果搭建过程中遇到问题，可以参考文章后面的问题解决部分。\n体验 搭建完成后，我分别使用移动端的 MT 管理器、和 Windows 自带的网络位置进行了测试。在 MT 管理器下连接后操作十分流畅，上传/下载的速度也很快。而 Windows 自带的网络位置则十分难用，打开文件只打开了一个空的 Edge，复制文件十分缓慢，新建文件夹需要延迟很久，删除文件也经常删不掉。fkms\n但尽管如此，通过 FTP 传输文件仍然带来了一种全新的体验：手机上将文件移进”文件夹“，转眼就能在电脑上移出来使用，做到了几近原生、无缝的传输体验。相信如果解决了 Windows 端的工具问题，效率会大大提升。\n问题解决 无法登录进 FTP Shell Ubuntu 官网的说明 To allow users with a shell of /usr/sbin/nologin access to FTP, but have no shell access, edit /etc/shells adding the nologin shell.\nThis is necessary because, by default vsftpd uses PAM for authentication, and the /etc/pam.d/vsftpd configuration file contains:\nauth required pam_shells.so\nThe shells PAM module restricts access to shells listed in the /etc/shells file.\n摘自这里\n解决办法：编辑 /etc/shells，在文件末尾添加一行 /usr/sbin/nologin\n550 create directory operation failed 如果设置了 write_enable 后仍不能创建文件夹，需要确保根目录具有可执行权限。执行以下命令：\n1 $ chmod 777 -R /srv/ftp vsftpd: refusing to run with writable root inside chroot 如果设置了 chroot 后无法新建文件夹/上传文件，并提示以上信息，是因为 2.3.5 版本后 vsftpd 加强了安全检查，用户的主目录不能再有写权限，如果检查到就会报错。可以在配置文件中添加 allow_writeable_chroot=YES 来解决。\n参考自这里\n","date":"2022-09-14T20:34:14+08:00","image":"https://sorabs.cc/posts/raspberrypi-ftp-server/cover_hu9e7cb5a45df0cdaf3fb81de0a36b0a5e_155771_120x120_fill_q75_box_smart1.jpg","permalink":"https://sorabs.cc/posts/raspberrypi-ftp-server/","title":"树莓派搭建 FTP 服务器实现局域网文件共享"},{"content":"Typography 隐藏文字，鼠标悬停（移动端点击）以展示： HUGO YES!\nShortcodes Tip Information Information tip test. Warning Warning tip test. Error Error tip test. Success Success tip test. Quote Quote tip test. 这是一段长文本 Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. ","date":"2022-09-13T21:25:32+08:00","image":"https://sorabs.cc/posts/testground/cover_huc792f4b39d5c3e81ac227f21be32ba93_31697_120x120_fill_box_smart1_3.png","permalink":"https://sorabs.cc/posts/testground/","title":"测试场 | TestGround"},{"content":"一直听说星露谷对于 Mod 的支持十分完善，这次打算自己尝试一番。\n注意 本文仅针对 Windows 平台，其他平台方法大同小异，可以直接参照官方 Wiki。 首先到 SMAPI 官网下载最新的安装包，可以选择从 NexusMods (N 网) 下载，也可以直接下载 (Direct download)。截至本文，SMAPI 的最新版本为 3.16.2。\n把下载下来的 SMAPI-\u0026lt;版本\u0026gt;-installer.zip 解压到任意位置，打开里面的 install on Windows.bat，安装脚本会自动检测游戏的安装位置。如果没有找到会提示以下信息：\n1 2 3 Oops, couldn\u0026#39;t find the game automatically. Type the file path to the game directory (the one containing \u0026#39;Stardew Valley.dll\u0026#39;), then press enter. 出现这种情况，首先找到星露谷的安装目录，若为 Steam 安装可以直接右键库里的星露谷，选择管理 - 浏览本地文件，然后复制打开的文件夹路径（例如我的是 D:\\Steam\\steamapps\\common\\Stardew Valley），再粘贴进终端内并回车。\n1 2 3 4 5 6 What do you want to do? [1] Install SMAPI. [2] Uninstall SMAPI. Type 1 or 2, then press enter. 输入 1 并回车继续安装。日后如果想要卸载 SMAPI，可以再次运行此脚本并选择 2 卸载。\n如果出现以下信息，则为安装成功：\n1 2 3 4 SMAPI is installed! If you use Steam, set your launch options to enable achievements (see smapi.io/install): \u0026#34;D:\\Steam\\steamapps\\common\\Stardew Valley\\StardewModdingAPI.exe\u0026#34; %command% If you don\u0026#39;t use Steam, launch StardewModdingAPI.exe in your game folder to play with mods. 提示信息中指出，如果使用 Steam 启动游戏，可以设置启动项来确保安装 SMAPI 后也能正常获得成就。\n注意 在配置Steam启动项之前，需要确保您的游戏路径里没有中文，否则将设置失败。 首先复制终端窗口中给出的启动指令（如上文，为 \u0026quot;D:\\Steam\\steamapps\\common\\Stardew Valley\\StardewModdingAPI.exe\u0026quot; %command%），Steam 中右键星露谷打开属性，在“通用”选项卡中把复制的指令粘贴进“启动选项”一栏，保存即可。\n至此已经完成了 SMAPI 的安装，至于添加 Mod 下次再讲 （咕咕咕（（\n","date":"2022-09-13T19:34:50+08:00","permalink":"https://sorabs.cc/posts/smapi-install/","title":"星露谷模组加载器 —— SMAPI 的安装"},{"content":"很久没写博客了，前些天看到几个群友的博客，心血来潮想把自己的复兴一下\n发展历程 在此前已经有过两版博客，但由于懒惰等原因（）现在都废弃了。\nv1 - Hexo 最早的一版基于 Hexo 搭建，主题使用自定义程度极高的 butterfly，也草草写过几篇文章。但也正因为自定义程度极高，导致花费大量时间去折腾，反而丢了写博客的初衷。而且 butterfly 主题引用大量的 js 文件和各种图片资源，博客变得非常臃肿，再加上 GitHub Pages 的网络因素，加载非常耗时，不久就放弃了。\nv2 - Vue 沉寂一段时间之后突然心痒痒，又打算重做一个博客。这时候已经学过了 Vue.js，就抛弃了原有的 Hexo 架构，为了追求极致的开始自己从头写起。最终成品为单页面应用，同时使用自己写的 CLI 工具管理文章、图片等资源。但 v1 时 butterfly 的自定义就花费大量精力了，自己写指挥更甚。再者单页面应用对于 SEO 优化不是友好，也没有多余的服务器搞服务端渲染，加上技术不到位导致成品各种瑕疵\u0026hellip;多方面因素之下，第二版也放弃了。\nv3 - Hugo! 又隔了很久，直到最近才打算把博客重新搭起来，不然有时的一些想法也没法记录。参考了上次的教训，这次依然是在已有的博客框架中选择。寻觅一番后，最终选择了 Hugo。Hugo 与 Hexo 类似，同为静态网站生成引擎。但 Hexo 使用 Node.js 编写，而 Hugo 使用 Go，性能远远超过前者。（写到这里的时候测试了一下，执行生成操作的耗时仅有 1262ms，而印象中以前 Hexo 需要数十秒）；而且得益于 Go 语言的特性，Hugo 的所有环境只有一个简单的可执行文件，比起 Hexo 麻烦的环境配置好上太多。\n总结 从几版的经验可以看出，次次都在舍本逐末，钻研各种配置，却忘记了写文章的初衷。希望这一次的 v3 可以让自己反思一下，坚持下去。\n","date":"2022-09-12T15:44:45+08:00","permalink":"https://sorabs.cc/posts/brand-new-blog-v3/","title":"Brand New Blog v3"}]