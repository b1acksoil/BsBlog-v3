<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>树莓派 on BsBlog</title><link>https://sorabs.cc/tags/raspberrypi/</link><description>Recent content in 树莓派 on BsBlog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://sorabs.cc/tags/raspberrypi/index.xml" rel="self" type="application/rss+xml"/><item><title>在树莓派 4B 上安装 Arch Linux ARM</title><link>https://sorabs.cc/posts/raspberrypi-4b-arch/</link><pubDate>Sun, 02 Oct 2022 10:51:14 +0800</pubDate><guid>https://sorabs.cc/posts/raspberrypi-4b-arch/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>自从在虚拟机、&lt;a class="link" href="../wsl2-arch/" >WSL2&lt;/a> 上相继安装过 Arch Linux 之后，我将目光投向了家里仅剩的一个还运行着 Ubuntu 的 Linux 设备 —— 树莓派 4B。&lt;/p>
&lt;p>话不多说，直接开搞（&lt;/p>
&lt;h2 id="准备">准备&lt;/h2>
&lt;p>首先由于启动方式的不同，Arch Linux ARM for Raspberry Pi 并不能使用我们一般用的 RPi Imager 烧录。要安装 Arch，首先得准备一台已经装好了的 Linux 设备。可以使用虚拟机，这里我直接用树莓派的备用系统（一张烧好了官方系统的 SD 卡，作为后备还原系统）安装。&lt;/p>
&lt;p>随便 pick 一张适合做系统的 SD 卡插入电脑，开始我们的安装。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>使用 &lt;code>lsblk&lt;/code> 命令查看连接到设备的 SD 卡设备号，我这里为 &lt;code>/dev/sda&lt;/code>。&lt;/p>
&lt;p>确认无误后，使用 &lt;code>sudo fdisk /dev/sda&lt;/code> （之后的 &lt;code>/dev/sda&lt;/code> 都换成你的 SD 卡）开始分区。&lt;/p>
&lt;p>步骤如下：&lt;/p>
&lt;ol>
&lt;li>输入 &lt;code>o&lt;/code>，清除 SD 卡上现有的所有分区&lt;/li>
&lt;li>输入 &lt;code>n&lt;/code>，新建一个分区，输入 &lt;code>1&lt;/code> 代表创建设备上的第一个分区，直接回车使用默认起始位置，然后输入 &lt;code>+200M&lt;/code> 指定结束位置。&lt;/li>
&lt;li>输入 &lt;code>t&lt;/code>，然后输入 &lt;code>c&lt;/code>，将刚刚创建的分区类型切换为 W95 FAT32 (LBA)。&lt;/li>
&lt;li>输入 &lt;code>n&lt;/code>，再新建一个分区，输入 &lt;code>2&lt;/code>，代表创建设备上的第二个分区，回车两次使用默认的起始和结束位置。&lt;/li>
&lt;li>输入 &lt;code>w&lt;/code>，将刚刚的改动写入 SD 卡。&lt;/li>
&lt;/ol>
&lt;p>格式化新创建的分区：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ mkfs.vfat /dev/sda1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ mkfs.ext4 /dev/sda2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>挂载分区：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ mkdir boot root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ mount /dev/sda1 boot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ mount /dev/sda2 root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下载 rootfs 包，并将其解压到 &lt;code>root&lt;/code> 目录下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ wget http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-aarch64-latest.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ bsdtar -xpf ArchLinuxARM-rpi-armv7-latest.tar.gz -C root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sync
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="tip tip-note">
&lt;div class="tip-header">下载太慢...&lt;/div>
&lt;div class="tip-content">如果下载太慢，也可以使用国内源下载，将 url 换为 &lt;a class="link" href="https://mirrors.tuna.tsinghua.edu.cn/archlinuxarm/os/ArchLinuxARM-rpi-aarch64-latest.tar.gz" target="_blank" rel="noopener"
>https://mirrors.tuna.tsinghua.edu.cn/archlinuxarm/os/ArchLinuxARM-rpi-aarch64-latest.tar.gz&lt;/a>&lt;/div>
&lt;/div>
&lt;p>将启动文件复制到 &lt;code>boot&lt;/code> 目录下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ mv root/boot/* boot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>更新 &lt;code>fstab&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sed -i &lt;span class="s1">&amp;#39;s/mmcblk0/mmcblk1/g&amp;#39;&lt;/span> root/etc/fstab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>卸载 SD 卡：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ umount boot root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来把 SD 卡插入树莓派，连上网线，在路由器查看树莓派的 IP 地址，然后使用 SSH 链接。默认用户名称和密码都为 &lt;code>alarm&lt;/code>。登录上后切换到 &lt;code>root&lt;/code> 用户（默认密码为 &lt;code>root&lt;/code>），编辑 &lt;code>/etc/pacman.d/mirrorlist&lt;/code> 换源：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">$ su root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># nano /etc/pacman.d/mirrorlist
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在文件开头添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxarm/$arch/$repo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也可以自行寻找其他的源添加，Ctrl+X 保存退出。&lt;/p>
&lt;p>接着初始化 pacman 密钥：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># pacman-key --init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># pacman-key --populate archlinuxarm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装基本包：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># pacman -Syyu base-devel git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就完成了 Arch Linux ARM 在树莓派上的安装，接下来照例安装一下基本环境。&lt;/p>
&lt;h2 id="配置可选">配置（可选）&lt;/h2>
&lt;p>默认用户名字叫 &lt;code>alarm&lt;/code>，不太好听，改个自己的（&lt;code>bs&lt;/code> 换成用户名）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># useradd -m -g users -G wheel -s /bin/bash bs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装 &lt;code>yay&lt;/code> 包管理器&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone https://aur.archlinux.org/yay-bin.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> yay-bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ makepkg -si
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>基本软件包&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ yay -S vim tree neofetch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装 &lt;code>oh-my-zsh&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ yay -S zsh curl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sh -c &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>常用 zsh 插件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> ~/.oh-my-zsh/plugins/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone https://github.com/zsh-users/zsh-autosuggestions.git --depth &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ git clone https://github.com/zsh-users/zsh-syntax-higlighting.git --depth &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编辑 &lt;code>~/.zshrc&lt;/code>，修改 &lt;code>plugins&lt;/code> 项&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">plugins=(
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> zsh-autosuggestions
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> zsh-syntax-highlighting
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="连接-wifi">连接 WiFi&lt;/h2>
&lt;p>我们目前还是通过有线网连接到的网络，可以使用 &lt;code>NetworkManager&lt;/code> 连接到 WiFi：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ yay -S networkmanager
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo systemctl &lt;span class="nb">enable&lt;/span> NetworkManager
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo systemctl start NetworkManager
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>显示附近的 WiFi：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ nmcli device wifi list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>连接 WiFi：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ nmcli device wifi connect WiFi名称 password 密码
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用 &lt;code>ip addr&lt;/code> 查看，发现已经连接到 WiFi了。&lt;/p></description></item><item><title>树莓派搭建 FTP 服务器实现局域网文件共享</title><link>https://sorabs.cc/posts/raspberrypi-ftp-server/</link><pubDate>Wed, 14 Sep 2022 20:34:14 +0800</pubDate><guid>https://sorabs.cc/posts/raspberrypi-ftp-server/</guid><description>&lt;img src="https://sorabs.cc/posts/raspberrypi-ftp-server/cover.jpg" alt="Featured image of post 树莓派搭建 FTP 服务器实现局域网文件共享" />&lt;h2 id="起因">起因&lt;/h2>
&lt;p>经常需要在电脑和手机之间互传文件，想了不少办法，最早是使用 QQ 等聊天工具进行文件传输，效率十分低下；后来找到了 &lt;a class="link" href="https://snapdrop.net/" target="_blank" rel="noopener"
>SnapDrop&lt;/a> 这款工具，可以以类似面对面快传的方式在局域网内传输文件，提高了些许效率，但还是感觉到些许别扭。于是开始找寻一种更为优雅的文件传输方式，想到手里有一个半吃灰的树莓派，就开始着手搭建自己的 FTP 文件服务器。&lt;/p>
&lt;div class="tip tip-quote">
&lt;div class="tip-header">什么是 FTP&lt;/div>
&lt;div class="tip-content">文件传输协议（File Transfer Protocol，缩写 &lt;strong>FTP&lt;/strong>）是一个用于在计算机网络上在客户端和服务器之间进行文件传输的应用层协议。&lt;/div>
&lt;/div>
&lt;p>相比 WebDav 等其他传输协议，纯 FTP 的安全性略显低下，但对于小型自用而言已经绰绰有余。&lt;/p>
&lt;h2 id="搭建">搭建&lt;/h2>
&lt;div class="tip tip-info">
&lt;div class="tip-header">关于树莓派&lt;/div>
&lt;div class="tip-content">本文中使用的树莓派信息如下：&lt;br>
型号：4B&lt;br>
RAM：4GB&lt;br>
系统：Ubuntu Server 22.04&lt;/div>
&lt;/div>
&lt;p>首先安装软件包 &lt;code>vsftpd&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sudo apt install vsftpd -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装过程中会自动创建一个名为 &lt;code>ftp&lt;/code> 的用户，我们给它设置一个密码作为稍后的登录密码（若打算开启匿名登录可跳过）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sudo passwd ftp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="tip tip-note">
&lt;div class="tip-header">FTP 文件存放位置&lt;/div>
&lt;div class="tip-content">FTP 服务开启后的文件存储位置就是 &lt;code>frp&lt;/code> 用户的家目录，位于 &lt;code>/srv/ftp&lt;/code>&lt;/div>
&lt;/div>
&lt;p>密码更改完成后，选用喜欢的编辑器打开 FTP 服务器配置文件 &lt;code>/etc/vsftpd.conf&lt;/code>，按照需求取消注释（去掉行首的 &lt;code>#&lt;/code> 号）或修改相应选项（如果找不到被注释的选项在哪里也可以直接在文件末尾添加，格式为 &lt;code>选项=值&lt;/code>）。这里列出几个常用的，&lt;code>YES/NO&lt;/code> 分别对应是/否：&lt;/p>
&lt;p>&lt;strong>通用&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;code>local_enable&lt;/code>&lt;/strong>：是否允许本地用户登录&lt;br>
&lt;strong>&lt;code>write_enable&lt;/code>&lt;/strong>：是否允许写入操作（上传文件、新建文件夹等）&lt;br>
&lt;strong>&lt;code>utf8_filesystem&lt;/code>&lt;/strong>：启用 UTF-8 支持&lt;/p>
&lt;p>&lt;strong>匿名登录相关&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;code>anonymous_enable&lt;/code>&lt;/strong>：是否允许匿名登录&lt;br>
&lt;strong>&lt;code>anon_upload_enable&lt;/code>&lt;/strong>：是否允许匿名用户上传文件&lt;br>
&lt;strong>&lt;code>anon_mkdir_write_enable&lt;/code>&lt;/strong>：是否允许匿名用户新建文件夹&lt;/p>
&lt;p>&lt;strong>&lt;a class="link" href="https://zh.wikipedia.org/wiki/Chroot" target="_blank" rel="noopener"
>Chroot&lt;/a> 相关&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;code>chroot_local_user&lt;/code>&lt;/strong>：是否将连接 FTP 的本地用户的根目录限制为其家目录（&lt;code>/home/&amp;lt;username&amp;gt;&lt;/code>）&lt;br>
&lt;strong>&lt;code>chroot_list_enable&lt;/code>&lt;/strong>：启用 chroot 白名单，只有在其中的用户&lt;strong>才会&lt;/strong>被 chroot（如果把 &lt;code>chroot_local_user&lt;/code> 设置为 &lt;code>YES&lt;/code> 将变为黑名单，只有在其中的用户&lt;strong>不会&lt;/strong>被 chroot）&lt;br>
&lt;strong>&lt;code>chroot_list_file&lt;/code>&lt;/strong>：chroot 黑/白名单的文件路径，文件中填写用户名，一行一个&lt;/p>
&lt;p>注：如果只设置 &lt;code>chroot_local_user&lt;/code> 为 &lt;code>YES&lt;/code> 而不设置黑/白名单，会对所有连接 FTP 的本地用户进行 chroot。&lt;/p>
&lt;p>修改好配置后重启 FTP 服务：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ sudo systemctl restart vsftpd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="连接">连接&lt;/h2>
&lt;p>查看树莓派 IP，可以使用 &lt;code>ip addr&lt;/code> 或 &lt;code>ifconfig&lt;/code> 等等方式。这里举例为 &lt;code>192.168.0.114&lt;/code>，后续命令中记得替换成自己的。&lt;/p>
&lt;p>使用 FTP 工具进行连接测试，这里先使用 Linux 和 Windows 都自带的 &lt;code>ftp&lt;/code> 命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ftp 192.168.0.114
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>提示输入用户名和密码，用户名输入 &lt;code>ftp&lt;/code>，密码输入之前设置的密码，若设置了匿名就直接留空回车。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Connected to 192.168.0.114.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">220 (vsFTPd 3.0.5)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Name (192.168.0.114:bs): ftp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">331 Please specify the password.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">230 Login successful.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ftp&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>成功进入 FTP Shell 后可以输入 &lt;code>ls&lt;/code>，&lt;code>pwd&lt;/code> 等命令进行测试，使用 &lt;code>quit&lt;/code> 退出。&lt;/p>
&lt;div class="tip tip-success">
&lt;div class="tip-header">搭建完成&lt;/div>
&lt;div class="tip-content">&lt;p>一个简单的 FTP 服务器已经搭建完毕，可以使用各种 FTP 工具连接使用。&lt;/p>
&lt;p>如果搭建过程中遇到问题，可以参考文章后面的问题解决部分。&lt;/p>
&lt;/div>
&lt;/div>
&lt;h2 id="体验">体验&lt;/h2>
&lt;p>搭建完成后，我分别使用移动端的 MT 管理器、和 Windows 自带的网络位置进行了测试。在 MT 管理器下连接后操作十分流畅，上传/下载的速度也很快。而 Windows 自带的网络位置则十分难用，打开文件只打开了一个空的 Edge，复制文件十分缓慢，新建文件夹需要延迟很久，删除文件也经常删不掉。&lt;del>fkms&lt;/del>&lt;/p>
&lt;p>但尽管如此，通过 FTP 传输文件仍然带来了一种全新的体验：手机上将文件移进”文件夹“，转眼就能在电脑上移出来使用，做到了几近原生、无缝的传输体验。相信如果解决了 Windows 端的工具问题，效率会大大提升。&lt;/p>
&lt;h2 id="问题解决">问题解决&lt;/h2>
&lt;h3 id="无法登录进-ftp-shell">无法登录进 FTP Shell&lt;/h3>
&lt;div class="tip tip-quote">
&lt;div class="tip-header">Ubuntu 官网的说明&lt;/div>
&lt;div class="tip-content">&lt;p>To allow users with a shell of /usr/sbin/nologin access to FTP, but have no shell access, edit /etc/shells adding the nologin shell.&lt;/p>
&lt;p>This is necessary because, by default vsftpd uses PAM for authentication, and the /etc/pam.d/vsftpd configuration file contains:&lt;/p>
&lt;p>&lt;code>auth&lt;/code> &lt;code>required&lt;/code>  &lt;code>pam_shells.so&lt;/code>&lt;/p>
&lt;p>The shells PAM module restricts access to shells listed in the /etc/shells file.&lt;/p>
&lt;p>摘自&lt;a class="link" href="https://ubuntu.com/server/docs/service-ftp" target="_blank" rel="noopener"
>这里&lt;/a>&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>解决办法：编辑 &lt;code>/etc/shells&lt;/code>，在文件末尾添加一行 &lt;code>/usr/sbin/nologin&lt;/code>&lt;/p>
&lt;h3 id="550-create-directory-operation-failed">550 create directory operation failed&lt;/h3>
&lt;p>如果设置了 &lt;code>write_enable&lt;/code> 后仍不能创建文件夹，需要确保根目录具有可执行权限。执行以下命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ chmod &lt;span class="m">777&lt;/span> -R /srv/ftp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="vsftpd-refusing-to-run-with-writable-root-inside-chroot">vsftpd: refusing to run with writable root inside chroot&lt;/h3>
&lt;p>如果设置了 chroot 后无法新建文件夹/上传文件，并提示以上信息，是因为 &lt;code>2.3.5&lt;/code> 版本后 &lt;code>vsftpd&lt;/code> 加强了安全检查，用户的主目录不能再有写权限，如果检查到就会报错。可以在配置文件中添加 &lt;code>allow_writeable_chroot=YES&lt;/code> 来解决。&lt;/p>
&lt;p>参考自&lt;a class="link" href="https://blog.csdn.net/bluishglc/article/details/42399439" target="_blank" rel="noopener"
>这里&lt;/a>&lt;/p></description></item></channel></rss>